{"version":3,"sources":["components/Footer/FooterElements.jsx","components/Footer/index.jsx","components/Login/LoginElements.jsx","components/Login/index.jsx","components/Landing/LandingElements.jsx","components/Landing/index.jsx","components/Navigator/NavigatorElements.jsx","components/Navigator/index.jsx","pages/index.jsx","components/Register/RegisterElemets.jsx","components/Register/index.jsx","pages/register.jsx","components/Home/HomeElements.jsx","components/Sidebars/SidebarsElements.jsx","components/Config.jsx","components/Sidebars/index.jsx","components/Channels/CardElements.jsx","components/ChannelViewer/ChannelViewerElements.jsx","components/ChannelViewer/index.jsx","components/Channels/index.jsx","components/Channels/mychannels.jsx","components/Users/index.jsx","components/NewChannel/NewChannelElements.jsx","components/NewChannel/index.jsx","components/ChatChannel/ChatChannelElements.jsx","components/NewMember/NewMemberElements.jsx","components/NewMember/index.jsx","components/ChatChannel/index.jsx","components/ChatUser/index.jsx","components/Home/index.jsx","pages/home.jsx","App.js","index.js"],"names":["FooterContainer","styled","footer","FooterWrap","div","FooterLinkContainer","FooterLinkWrapper","FooterLinkItems","FooterLinkTitle","h1","FooterLink","a","SocialMedia","section","SocialMediaWrap","SocialLogo","Link","WebsiteRights","small","SocialIcons","SocialIconLink","FooterSection","navigate","useNavigate","useEffect","localStorage","getItem","href","target","to","onClick","scroll","scrollToTop","Date","getFullYear","LoginWrapper","LoginContainer","LoginForm","form","LoginSubContainer","LoginReWrapper","LoginForgot","p","LogintTitle","Hr","hr","LoginLabel","label","LoginInput","input","LoginButton","button","SocialWrapper","ErrorP","LoginApple","LoginFB","LoginGH","LoginGP","LoginComponent","useState","email","password","details","setDetails","regError","setRegError","errorMessage","setErrorMessage","login","options","method","url","process","headers","data","axios","request","then","response","status","clear","setItem","JSON","stringify","catch","error","console","log","errors","onSubmit","e","preventDefault","size","htmlFor","type","name","value","onChange","required","placeholder","className","btnSubmit","LandingWrapper","WelcomeTextWrapper","LandingTitle","LandingsubTitle","LandingSection","Login","Nav","nav","AppName","RegisterButton","RegisterNav","Provider","color","HomeNav","LandingNav","LandingPage","Landing","Footer","RegisterContainer","RegisterWrapper","RegisterForm","WrapperLeft","RewrapperLeft","ReWrapperP","WrapperRight","ResigterHeader","RegisterAgreement","RegisterCheckbox","RegisterP","RegisterLabel","RegisterInput","RegisterSection","password_confirmation","notifStatus","setNotifStatus","message","setMessage","register","errorList","full_messages","map","msg","placonsfirmPassword","RegisterPage","Register","MainContainer","NavigationReWrapper","SidebarReWrapper","BodyReWrapper","SpecialContainer","bodyStateCons","SidebarsSection","bodyState","userName","parse","collapsed","iconShape","uid","title","CardContainer","CardWrapper","CardOverTitle","InfoCard","CardIcon","img","CardHead","CardSubHead","h2","CardPrag","ModalWrapper","ModalHeader","CloseViewer","CardMemberUl","ul","CardMemberLi","li","CardMemberList","MessageButton","customStyles","content","top","left","right","bottom","marginRight","transform","CardChannel","channelInfo","modalState","setbodyView","customHeaders","channelDetail","setchannelDetail","modal","id","getUserName","userId","listofU","find","el","undefined","isOpen","ariaHideApp","style","src","owner_id","created_at","toLocaleDateString","setChatChannel","channel_members","memberInfo","user_id","messageClick","getChannelDetails","AllChannels","listofChannels","setListofChannels","listofUsers","setlistofUsers","start","end","pageSlice","setpageSlice","setChannelInfo","pageCount","setPageCount","optionsUsers","dataSize","Math","ceil","length","getChannels","event","selected","slice","channels","handleClicks","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","onPageChange","pageRangeDisplayed","MyChannels","myId","filter","UsersSection","displayList","sort","b","ea","toLowerCase","eb","users","index","items","onSearch","string","results","fuseOptions","keys","resultStringKeyName","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","dangerouslySetInnerHTML","__html","renderOnZeroPageCount","NewChannelContainer","HeadWrapper","ChannelCreate","NewChannelTitle","NewChannelSTitle","FormWrapper","NewChannelForm","NewChannelLabel","NewChannelInput","NewChannelMember","NewChannleInfo","NewChannelUl","NewChannelLi","NewChannelSeparator","NewChannelError","RemoveButton","NewChannelSec","newChannel","setNewChannel","listofNew","setListofNew","errorCode","seterrorCode","errorName","seterrorName","Swal","fire","text","filtereredUser","removeUser","ChatChannelCont","ChatChannelHeadWrap","ChatChannelMessageWrap","ChatChannelMemeberWrap","ChatUpperDiv","ChatInputDiv","ChatChannelSTitle","ChatChannelMTitle","ChatChannelChatUl","ChatChannelChatLi","MyChatChanneDiv","MyChatChanneBody","ChatChannelChatDiv","ChatChannelSender","ChatChannelChatBody","InputMessage","NewMemberConainter","CardNewMember","cardInfo","setCardInfo","info","ChatChannelSec","channelDetails","setchannelDetails","userMessage","setuserMessage","messageList","setmessageList","channelId","UserInfo","cardState","setcardState","optionsMessages","messageonInterval","setInterval","clearInterval","sendMessage","sendOptions","getChannelDBInfo","sender","body","ChatUserSec","chatId","userUID","HomeSection","bodyView","NewChannel","Users","ChatChannel","ChatUser","HomePage","Home","App","path","element","exact","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89102604.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport const FooterContainer = styled.footer`\n  background-color:  #262626;\n  z-index: 33;\n`\n\nexport const FooterWrap = styled.div`\n  padding: 48px 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 1100px;\n  margin: 0 auto;\n`\nexport const FooterLinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 820px) {\n    padding-top: 32px;\n  }\n`\n\nexport const FooterLinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n`\nexport const FooterLinkItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 16px;\n  text-align: left;\n  width: 160px;\n  box-sizing: border-box;\n  color: #fff;\n\n  @media screen and (max-width: 420px) {\n    margin: 0;\n    padding: 10px;\n    width: 100%;\n  }\n`\nexport const FooterLinkTitle = styled.h1`\n  font-size: 14px;\n  margin-bottom: 16px;\n`\nexport const FooterLink = styled.a`\n  color: #fff;\n  text-decoration: none;\n  margin-bottom: 0.5rem;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    color: #01bf71;\n    transition: 0.3s ease-in-out;\n  }\n`\nexport const SocialMedia = styled.section`\n  max-width: 1000px;\n  width: 100%;\n`\n\nexport const SocialMediaWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1100px;\n  margin: 40px auto 0 auto;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`\n\nexport const SocialLogo = styled(Link)`\n  color: #fff;\n  justify-self: start;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  font-weight: bold;\n`\nexport const WebsiteRights = styled.small`\n  color: #fff;\n  margin-bottom: 16px;\n`\nexport const SocialIcons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 240px;\n`\nexport const SocialIconLink = styled.a`\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`","import React,{useEffect} from 'react'\nimport { FaFacebook, FaGooglePlay, FaYoutube } from 'react-icons/fa'\nimport { FooterContainer, FooterWrap, FooterLinkWrapper, FooterLinkItems, FooterLinkContainer, FooterLinkTitle, FooterLink, SocialIconLink, SocialIcons, SocialLogo, SocialMedia, SocialMediaWrap, WebsiteRights } from './FooterElements'\nimport { animateScroll as scroll } from 'react-scroll';\nimport { useNavigate } from 'react-router';\n\n\n\nconst FooterSection = () => {\n\n  let navigate = useNavigate();\n  useEffect(() => {\n    let customHeader = localStorage.getItem(\"headers\")\n    if(customHeader){\n      navigate(\"/home\")\n    }\n  }, [])\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  }\n\n  return (\n    <>\n    <FooterContainer>\n      <FooterWrap>\n        <FooterLinkContainer>\n          <FooterLinkWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>About us</FooterLinkTitle>\n                <FooterLink>Testimonials</FooterLink>\n                <FooterLink>Terms and Conditions</FooterLink>\n                <FooterLink>Privacy Policy</FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems>\n              <FooterLinkTitle>Contact Us</FooterLinkTitle>\n                <FooterLink>Contact</FooterLink>\n                <FooterLink>Email</FooterLink>\n            </FooterLinkItems>\n\n          </FooterLinkWrapper>\n\n          <FooterLinkWrapper>\n            <FooterLinkItems>\n              <FooterLinkTitle>Social Media</FooterLinkTitle>\n                <FooterLink href='https://www.facebook.com/' target='_blank' arial-label='Facebook'>Facebook</FooterLink>\n                <FooterLink href='https://www.youtube.com/' target='_blank' arial-label='Youtube'>Youtube</FooterLink>\n            </FooterLinkItems>\n          </FooterLinkWrapper>\n          <FooterLinkItems>\n              <FooterLinkTitle>Attributes</FooterLinkTitle>\n              <FooterLink href=\"http://www.freepik.com\">Image by Freepik</FooterLink>\n            </FooterLinkItems>\n        </FooterLinkContainer>\n        <SocialMedia>\n          <SocialMediaWrap>\n            <SocialLogo to='/' onClick={toggleHome}>\n              Slack App\n            </SocialLogo>\n            <WebsiteRights>G & G © {new Date().getFullYear()} All rights reserved.</WebsiteRights>\n            <SocialIcons>\n              <SocialIconLink href='https://www.facebook.com' target='_blank' arial-label='Facebook'>\n                <FaFacebook />\n              </SocialIconLink>\n              <SocialIconLink href='https://www.youtube.com/hQ' target='_blank' arial-label='Youtube'>\n                <FaYoutube />\n              </SocialIconLink>\n              <SocialIconLink href='https://play.google.com/' target='_blank' arial-label='GooglePlay'>\n                <FaGooglePlay />\n              </SocialIconLink>\n            </SocialIcons>\n          </SocialMediaWrap>\n        </SocialMedia>\n      </FooterWrap>\n    </FooterContainer>\n    </>\n  )\n}\n\nexport default FooterSection\n","import styled from \"styled-components\"\n\nexport const LoginWrapper = styled.div`\n    display: flex;\n    background: white;\n    border-radius: 10px;\n    @media screen and (max-width: 960px) {\n        margin: 50px 0 30px 0;\n  }\n\n`\n\n\nexport const LoginContainer = styled.div`\n    margin: 20px;\n    display: flex;\n    @media screen and (max-width: 724px) {\n    transition: 0.8s all ease;\n    flex-direction: column-reverse;\n  }\n\n`\nexport const LoginForm = styled.form`\n    height: 100%;\n`\n\n\nexport const LoginSubContainer = styled.div`\n    margin: 20px;\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const LoginReWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    background: white;\n\n`\nexport const LoginForgot = styled.p`\n    text-align:right;\n    margin-top: 20px;\n    cursor: pointer;\n    &:hover{\n        text-decoration: underline;\n    }\n`\nexport const LogintTitle = styled.p``\n\nexport const Hr = styled.hr``\n\nexport const LoginLabel = styled.label``\n\nexport const LoginInput = styled.input`\n    border:none;\n    width: 100%;\n    min-height: 85px;\n    width: 355px;\n    font-size: 20px;\n    padding-left:10px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n    background: white;\n\n    &:focus{\n        outline: none;\n        caret-color: green;\n        }\n\n    @media screen and (max-width: 960px) {\n    width: 100%;\n  }\n`\n\nexport const LoginButton = styled.button`\n    color: white;\n    background: #666666;\n    border: none;\n    border-radius: 10px;\n    width: 100%;\n    max-height: 56px;\n    margin: 10px;\n    min-height: 56px;\n    text-align: center;\n    line-height: 36px;\n    padding: 0 16px;\n    transform: translate3d(0,0,0);\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 2.5px;\n    overflow: hidden;\n    box-shadow: none;\n    cursor: pointer;\n    &:hover{\n        opacity: 0.5;\n    }\n\n    @media screen and (max-width: 960px) {\n        margin: auto;\n        margin-top:10px;\n  }\n\n`\n\n//Login Lnks\n\nexport const SocialWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media screen and (max-width: 726px) {\n        flex-direction: row;\n        flex-wrap: wrap;\n        >a{\n             margin: 2px;\n            }\n  }\n`\nexport const ErrorP = styled.p`\n    color: red;\n`\n\n\nexport const LoginApple = styled.a`\n    border-radius: 50px;\n    background: #cbcdd4;\n    white-space: nowrap;\n    padding: 10px 22px;\n    color: black;\n    font-size: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    margin-top:20px;\n    min-width: 135px;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #eaecef;\n        color: #010606;\n    }\n`\nexport const LoginFB = styled.a`\n\n  border-radius: 50px;\n  background: #4267b2;\n  white-space: nowrap;\n  padding: 10px 22px;\n  color: black;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  margin-top:20px;\n  min-width: 135px;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #eaecef;\n    color: #010606;\n  }\n`\n\nexport const LoginGH = styled.a`\n    border-radius: 50px;\n    background: #1971c2;\n    white-space: nowrap;\n    padding: 10px 22px;\n    color: black;\n    font-size: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    margin-top:20px;\n    min-width: 135px;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #eaecef;\n        color: #010606;\n    }\n`\n\nexport const LoginGP = styled.a`\n    border-radius: 50px;\n    background: red;\n    white-space: nowrap;\n    padding: 10px 22px;\n    color: black;\n    font-size: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    margin-top:20px;\n    min-width: 135px;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #eaecef;\n        color: #010606;\n    }\n`","import React,{useState} from 'react'\nimport {CgLockUnlock} from 'react-icons/cg'\nimport {IoPersonOutline} from 'react-icons/io5'\nimport {FaFacebookF} from 'react-icons/fa'\nimport {AiOutlineApple,AiOutlineGithub} from 'react-icons/ai'\nimport {FcGoogle} from 'react-icons/fc'\nimport {useNavigate} from 'react-router-dom'\nimport {Hr, LoginApple, LoginButton, LoginContainer, LoginFB, LoginForgot, LoginGH, LoginGP, LoginInput, LoginLabel,LoginForm, LoginReWrapper, LoginSubContainer, LogintTitle, LoginWrapper, SocialWrapper, ErrorP } from './LoginElements'\nimport axios from 'axios'\n\nconst LoginComponent = () => {\n\n    let navigate = useNavigate();\n    const headers = localStorage.getItem(\"headers\")\n    if(headers){\n        navigate(\"/home\")\n    }\n\n    const [details, setDetails] = useState({email: \"\", password: \"\"})\n    const [regError, setRegError] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const login = async ()=> {\n\n        const options = {\n            method: 'POST',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/auth/sign_in`,\n            headers: {'Content-Type': 'application/json'},\n            data: details\n        }\n    \n        await axios.request(options)\n        .then(response => {\n            if (response.status === 200) {\n                localStorage.clear()\n                localStorage.setItem(\"headers\", JSON.stringify(response.headers)) \n                localStorage.setItem(\"userinfo\", JSON.stringify(response.data.data))\n                navigate('/home')\n            }\n        })\n        .catch(error => {\n            console.log(error)\n            if (error.response.status >= 400) {\n                localStorage.clear()\n                setRegError(error.response.status)\n                setErrorMessage(error.response.data.errors[0])\n            }else{\n                localStorage.clear()\n                setRegError(6000)\n                setErrorMessage(\"An unkown error has occurred.\")\n            }\n        })\n    }\n        \n    const handleEmailChange = e => {\n        setDetails({...details, email: e.target.value})\n    }\n    \n    const handlePasswordChange = e => {\n        setDetails({...details, password: e.target.value})\n    }\n    \n    const onSubmitLogin = e => {\n        e.preventDefault()\n\n        login()\n        setRegError(\"\")\n        setErrorMessage(\"\")\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContainer>\n                <LoginSubContainer>\n                        <LogintTitle>Login with Social Links</LogintTitle>\n                        <SocialWrapper>\n                            <LoginApple><AiOutlineApple/> Apple</LoginApple>\n                            <LoginFB><FaFacebookF/> Facebook</LoginFB>        \n                            <LoginGH><AiOutlineGithub/>  GitHub</LoginGH>\n                            <LoginGP><FcGoogle/> Google</LoginGP>\n                        </SocialWrapper>           \n                    </LoginSubContainer>\n\n                    <LoginSubContainer>\n                        <LoginForm onSubmit={onSubmitLogin}>\n                            <LogintTitle>Login with Account</LogintTitle>\n                            <LoginReWrapper>\n                                <IoPersonOutline size={50} />\n                                <LoginLabel htmlFor='email'/>\n                                    <LoginInput \n                                            email \n                                            type=\"email\"\n                                            name=\"email\"\n                                            value={details.email} \n                                            onChange={handleEmailChange}\n                                            required\n                                            placeholder =\"Email\"\n                                    >\n                                    </LoginInput>\n                            </LoginReWrapper>\n                            <Hr/>\n                            <LoginReWrapper>\n                                <CgLockUnlock size={50} />\n                                <LoginLabel htmlFor='password'/>\n                                    <LoginInput \n                                        password \n                                        type=\"password\" \n                                        name=\"password\" \n                                        value={details.password} \n                                        onChange={handlePasswordChange}\n                                        required\n                                        placeholder =\"Password\"\n\n                                    >\n                                    </LoginInput>\n                            </LoginReWrapper>\n                            {regError && <ErrorP className=\"error\">{errorMessage}</ErrorP>}\n                            <LoginForgot>Forgot Password?</LoginForgot>\n                            <LoginButton\n                                btnSubmit \n                                type=\"submit\"\n                            >Login</LoginButton>\n                            <LoginForgot onClick={() => navigate(\"/register\")}>New user? Create your new Account</LoginForgot>\n                        </LoginForm>\n                    </LoginSubContainer>\n            </LoginContainer>\n        </LoginWrapper>\n    )\n}\n\nexport default LoginComponent\n","import styled from \"styled-components\";\n\nexport const LandingWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;;\n    width: 100%;\n    height: 100%;\n    background-image: url('/img/background.jpg');\n    background-size:     cover;                \n    background-repeat:   no-repeat;\n    background-position: center center;\n\n    @media screen and (max-width: 960px) {\n        height: 100%;\n  }\n`\n\nexport const WelcomeTextWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    align-items: center;\n`\nexport const LandingTitle = styled.p`\n    color: white;\n    font-size: 30px;\n    font-family: \"Roboto\", sans-serif;\n    letter-spacing: 5px;\n    font-weight: 500;\n    @media screen and (max-width: 960px) {\n        margin-top: 30px;\n  }\n`\nexport const LandingsubTitle = styled.p`\n    color: white;\n    font-size: 50px;\n    width: 80vw;\n    font-weight: bold;\n    text-align: center;\n    margin-top:30px;\n    letter-spacing: 4px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n\n    @media screen and (max-width: 960px) {\n        font-size: 40px;\n  }\n\n`\n","import React from 'react'\nimport LoginComponent from '../Login'\nimport {LandingsubTitle, LandingTitle, LandingWrapper, WelcomeTextWrapper} from './LandingElements'\n\nconst LandingSection = () => {\n    return (\n        <>\n        <LandingWrapper>\n            <WelcomeTextWrapper>\n                <LandingTitle>WELCOME!</LandingTitle>\n                <LandingsubTitle>Transform the way you work with one place for everyone and everything you need to get stuff done.</LandingsubTitle>\n            </WelcomeTextWrapper>\n            <LoginComponent/>\n        </LandingWrapper>\n            \n        </>\n    )\n}\n\nexport default LandingSection\n","import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport const Nav = styled.nav`\n    position: sticky;\n    top:0;\n    z-index: 1;\n    background: #262626;\n    height: 80px;\n    width: 100%;\n    padding: 0 20px 0 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nexport const AppName = styled.p`\n    font-size: 2rem;\n    margin-left: 30px;\n    color: white;\n    cursor: pointer;\n`\n\nexport const RegisterButton = styled(Link)`\n    color: white;\n    transition: all .2s ease;\n    cursor: pointer;\n    min-width: 88px;\n    text-align: center;\n    border-radius: 3px;\n    border: 2px solid;\n    font-size: 20px;\n    outline: 0;\n    padding: 5px 25px;\n    height: auto;\n    margin-right: 30px;\n    text-decoration: none;\n    &:hover{\n        background: white;\n        color: black;\n    }\n`","import React,{useEffect} from 'react'\nimport {IconContext} from 'react-icons/lib'\nimport { AppName, Nav, RegisterButton } from './NavigatorElements'\nimport {useNavigate} from 'react-router-dom'\n\nconst LandingNav = () => {\n    return (\n        <>\n        <IconContext.Provider value={{ color: '#fffff'}}>\n            <Nav>\n                <AppName>Slack App</AppName>\n                <RegisterButton to=\"/register\">\n                    Register\n                </RegisterButton>\n            </Nav>\n        </IconContext.Provider>\n        </>\n    )\n}\n\nexport const RegisterNav = () => {\n    return (\n        <>\n        <IconContext.Provider value={{ color: '#fffff'}}>\n            <Nav>\n                <AppName>Slack App</AppName>\n                <RegisterButton to=\"/\">\n                    Login\n                </RegisterButton>\n            </Nav>\n        </IconContext.Provider>\n        </>\n    )\n}\n\nexport const HomeNav = () => {\n    let navigate = useNavigate();\n\n    useEffect(() => {\n\n        let userInfo = localStorage.getItem(\"headers\");\n\n        if(userInfo === null){\n            navigate(\"/\");\n        }\n        return () => {\n         \n        }\n    }, [navigate])\n  \n\n    return (\n        <>\n        <IconContext.Provider value={{ color: '#fffff'}}>\n            <Nav>\n                <AppName>Slack App</AppName>\n                <RegisterButton to=\"/\" onClick={ ()=> localStorage.clear()}>\n                    Log out\n                </RegisterButton>\n            </Nav>\n        </IconContext.Provider>\n        </>\n    )\n}\n\n\nexport default LandingNav\n","import React from 'react'\nimport FooterSection from '../components/Footer'\nimport LandingSection from '../components/Landing'\nimport LandingNav from '../components/Navigator'\n\nconst LandingPage = () => {\n    return (\n        <>\n            <LandingNav/>\n            <LandingSection/>\n            <FooterSection/>\n            \n        </>\n    )\n}\n\nexport default LandingPage\n","import styled from \"styled-components\";\n\nexport const RegisterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;;\n    width: 100%;\n    height: 100vh;\n    background-image: url('/img/background.jpg');\n    background-size:     cover;                \n    background-repeat:   no-repeat;\n    background-position: center center;\n\n    @media screen and (max-width: 785px) {\n        height: 100%;\n  }\n`\nexport const RegisterWrapper = styled.div `\n    border-radius: 10px;\n    display: flex;\n    flex-direction: row;\n    align-content: center;\n    align-items: center;\n    max-width: 500px;\n    height: 100vh;\n    background:#ffffff;\n    margin: 50px 0 50px 0;\n\n    @media screen and (max-width: 785px) {\n        flex-direction: column;\n  }\n`\nexport const RegisterForm = styled.form``\n\nexport const WrapperLeft = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 10px;\n    height: 80%;\n    width: 10vw;\n    background-color:grey;\n    margin-left: -70px;\n\n\n    @media screen and (max-width: 785px) {\n        flex-direction: row;\n        width: 100%;\n        margin-left: 0;\n    }\n\n`\nexport const RewrapperLeft = styled.div`\n\n`\nexport const ReWrapperP = styled.p`\n    width: 100%;\n    text-align: center;\n    letter-spacing: 1.5px;\n    font-weight: 900;\n`\n\nexport const WrapperRight = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-left: 70px;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 785px) {\n        width: 100%;\n        margin-left: 0;\n    }\n\n\n`\n\nexport const ResigterHeader = styled.p`\n    letter-spacing: 3px;\n    margin-top: 20px;\n    font-size: 25px;\n`\n\nexport const RegisterAgreement = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin: 20px 10px 0 10px;\n`\nexport const RegisterCheckbox = styled.input`\n    transform: scale(1.5);\n    margin-right: 20px;\n`\nexport const RegisterP = styled.p`\n    letter-spacing: 3px;\n`\n\nexport const ResgisterHr = styled.hr``\n\nexport const RegisterLabel = styled.label``\n\nexport const RegisterInput = styled.input`\n    width: 100%;\n    min-height: 85px;\n    font-size: 20px;\n    padding: 20px;\n    border:none;\n    &:focus{\n        outline: none;\n        caret-color: green;\n        }\n`\n\nexport const RegisterButton = styled.button`\n    color: white;\n    background: #666666;\n    border: none;\n    border-radius: 10px;\n    width: 80%;\n    margin: 20px  auto 0 auto;\n    max-height: 56px;\n    min-height: 56px;\n    text-align: center;\n    line-height: 36px;\n    padding: 0 16px;\n    transform: translate3d(0,0,0);\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 2.5px;\n    overflow: hidden;\n    box-shadow: none;\n    cursor: pointer;\n    &:hover{\n        opacity: 0.5;\n    }\n\n    @media screen and (max-width: 785px) {\n        margin: 20px  auto 20px auto;\n  }\n\n`","import React, {useState} from 'react'\nimport {DiHtml5Connectivity} from 'react-icons/di'\nimport {RiStackshareLine} from 'react-icons/ri'\nimport {FaSearchengin} from 'react-icons/fa'\nimport { RegisterAgreement, RegisterButton, RegisterCheckbox, RegisterContainer, RegisterForm,RegisterInput, RegisterLabel, RegisterP, RegisterWrapper, ResigterHeader, RewrapperLeft, ReWrapperP, WrapperLeft, WrapperRight } from './RegisterElemets'\nimport { ErrorP, Hr } from '../Login/LoginElements'\nimport axios from 'axios'\n\nconst RegisterSection = () => {\n\n    const [details, setDetails] = useState({email: \"\", password: \"\", password_confirmation:\"\"})\n    const [notifStatus, setNotifStatus] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    \n    const register = async () => {\n        const options = {\n            method: 'POST',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/auth`,\n            headers: {'Content-Type': 'application/json'},\n            data: JSON.stringify(details)\n        }\n    \n        axios.request(options)\n        .then(response => {\n            if (response.status === 200 && response.data.status === \"success\") {\n                setNotifStatus(\"200\")\n                setMessage(\"Register success! You can now login.\")\n                setDetails({email: \"\", password: \"\", password_confirmation:\"\"})\n\n            }\n        })\n        .catch(error => {\n            if (error.response.status === 422 && error.response.data.status === \"error\") {\n                setNotifStatus(error.response.status)\n\n                const errorList = (error.response.data.errors.full_messages)\n                setMessage(errorList.map(msg => {\n                    return <li>{msg}</li>\n                }))\n            }\n        })\n    }\n        \n    const handleEmailChange = e => {\n        setDetails({...details, email: e.target.value})\n\n    }\n    \n    const handlePasswordChange = e => {\n        setDetails({...details, password: e.target.value})\n    }\n\n    const handleConfirmPasswordChange = e => {\n        setDetails({...details, password_confirmation: e.target.value})\n    }\n    \n    const onSubmitLogin = e => {\n        e.preventDefault()\n        setNotifStatus(\"\")\n        setMessage(\"\")\n\n        if(details.password !== details.password_confirmation){\n            setNotifStatus(200)\n            setMessage(\"Password and Confirm password does not match.\")\n            return\n        }\n        register()\n    }\n\n\n    return (\n        <>\n            <RegisterContainer>\n                <RegisterWrapper>\n                    <WrapperLeft>\n                            <RewrapperLeft>\n                                <DiHtml5Connectivity size={100} color={'#fbc223'} />\n                                <ReWrapperP>Connect</ReWrapperP>\n                            </RewrapperLeft>\n                            <RewrapperLeft>\n                                <RiStackshareLine size={100} color={'#ff6d4c'}/>\n                                <ReWrapperP>Share</ReWrapperP>\n                            </RewrapperLeft>\n                            <RewrapperLeft>\n                                <FaSearchengin size={100} color={'#00aeb1'}/>\n                                <ReWrapperP>Discover</ReWrapperP>\n                            </RewrapperLeft>\n                        </WrapperLeft>\n                    <WrapperRight>\n                        <RegisterForm onSubmit={onSubmitLogin}>\n                            <ResigterHeader>Sign up</ResigterHeader>\n                            {notifStatus && <ErrorP className=\"notif\">{message}</ErrorP>}\n                            <RegisterLabel>\n                                <RegisterInput  \n                                  email \n                                  type=\"email\" \n                                  name=\"email\"\n                                  value={details.email} \n                                  onChange={handleEmailChange}\n                                  placeholder=\"E-mail address\" \n                                  required\n                                  />\n                            </RegisterLabel>\n                            <Hr/>\n                            <RegisterLabel>\n                                <RegisterInput \n                                    type=\"password\" \n                                    name=\"password\"\n                                    value={details.password} \n                                    onChange={handlePasswordChange}\n                                    placeholder=\"Password\" \n                                    required\n                                />\n                            </RegisterLabel>\n                            <Hr/>\n                            <RegisterLabel>\n                                <RegisterInput  \n                                placonsfirmPassword \n                                type=\"password\" \n                                name=\"conpassword\"\n                                value={details.password_confirmation} \n                                onChange={handleConfirmPasswordChange}\n                                placeholder=\"Confirm Password\" \n                                required\n                                />\n                            </RegisterLabel>\n                            <Hr/>\n                            <RegisterAgreement>\n                                <RegisterCheckbox type=\"checkbox\" required/>\n                                <RegisterP> By creating your account, you agree to our <a href=\"/\">Terms of Use</a> &amp; <a href=\"/\">Privacy Policy</a>\n                                </RegisterP>\n                            </RegisterAgreement>\n                            <RegisterButton btnSubmit type=\"submit\">Let's Go!</RegisterButton>\n                        </RegisterForm>\n                    </WrapperRight>\n                </RegisterWrapper>\n\n            </RegisterContainer>\n        </>\n    )\n}\n\nexport default RegisterSection\n","import React from 'react'\nimport FooterSection from '../components/Footer'\nimport { RegisterNav } from '../components/Navigator'\nimport RegisterSection from '../components/Register'\n\nconst RegisterPage = () => {\n    return (\n        <>\n        <RegisterNav/>\n        <RegisterSection/>\n        <FooterSection/>\n        </>\n    )\n}\n\nexport default RegisterPage\n","import styled from \"styled-components\"\n\nexport const MainContainer = styled.div`\n    height: 100%;\n    display: grid;\n    grid-template-columns: max-content auto;\n    grid-template-rows: auto 90%;\n    grid-template-areas: \n        \"header header\"\n        \"sidebar body\"\n    ;\n`\n\nexport const NavigationReWrapper = styled.div`\n    grid-area: header;\n    height: auto;\n`\n\nexport const SidebarReWrapper = styled.div`\n    grid-area: sidebar;\n    width: fit-content;\n\n`\nexport const BodyReWrapper = styled.div`\n    grid-area: body;\n`\n","import styled from \"styled-components\";\n\nexport const SpecialContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 10px auto 10px 10px;\n`","export const bodyStateCons = {\n    myChannels : 0,\n    allChannels : 1,\n    createChannels: 2,\n    userList:3,\n    chatChannel: 4,\n    chatUser: 5,\n}","import { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent, Menu, MenuItem, SubMenu} from 'react-pro-sidebar';\nimport React from 'react'\nimport { SpecialContainer } from './SidebarsElements';\nimport {Link} from \"react-router-dom\";\nimport { bodyStateCons } from '../Config';\nconst SidebarsSection = ({bodyState}) => {\n\n    const userName = JSON.parse(localStorage.getItem(\"userinfo\"))\n\n    return (\n        <>\n        <ProSidebar collapsed={false}>\n            <SidebarHeader>\n            </SidebarHeader>\n            <SidebarContent>\n                <Menu iconShape=\"square\">\n                   {userName && <MenuItem>\n                        {userName.uid}\n                        <Link to=\"/home\"/>\n                    </MenuItem> }\n                    <SubMenu title=\"Channels\">\n                        <MenuItem  onClick={()=>bodyState(bodyStateCons.createChannels)}>\n                            Create New\n                        </MenuItem>\n                        <MenuItem onClick={()=>{bodyState(bodyStateCons.myChannels)}}>\n                            My Channels\n                        </MenuItem>\n                        <MenuItem onClick={()=> bodyState(bodyStateCons.allChannels)}>\n                            All Channels\n                        </MenuItem>\n                    </SubMenu>\n                    <SubMenu title=\"Users\">\n                        <MenuItem onClick={()=>bodyState(bodyStateCons.userList)}>\n                            All Users\n                        </MenuItem>\n                   </SubMenu>\n                </Menu>\n            </SidebarContent>\n           <SidebarFooter>\n                <SpecialContainer>\n                    G & G\n                </SpecialContainer>\n           </SidebarFooter>\n        </ProSidebar>\n        </>\n    )\n}\n\nexport default SidebarsSection\n","import styled from 'styled-components'\n\nexport const CardContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n `\nexport const CardWrapper = styled.div`\n  overflow: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n\n\n`\n\nexport const CardOverTitle = styled.h1`\n  margin: 20px auto 20px auto;\n  color: black;\n  font-size: 30px;\n  font-family: \"Roboto\", sans-serif;\n  letter-spacing: 5px;\n  min-width: 350px;\n  font-weight: 500;\n`\n\nexport const InfoCard = styled.div`\n  background: #929292;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  border-radius: 10px;\n  min-height: 100px;\n  max-width: 275px;\n  min-width: 275px;\n  padding:  30px;\n  box-shadow: 0 1px 3px #55505033;\n  transition: all 0.2s ease-in-out;\n  margin: 5px;\n\n  &:hover {\n    transform: scale(1.02);\n    transition: all 0.2s ease-in-out;\n    background: #a58f8f;\n    cursor:pointer;\n  }\n`\nexport const CardIcon = styled.img`\n  height: 160px;\n  width: 160px;\n  margin-bottom: 10px;\n\n`\nexport const CardHead = styled.p`\n  text-align: center;\n  display: inline;\n  width: 100%;\n  font-size: 1.5rem;\n  color: black;\n  margin: 2vh auto 2vh auto;\n  \n`\nexport const CardSubHead = styled.h2`\n  font-size: 1rem;\n  margin-bottom: 10px;\n`\n\nexport const CardPrag = styled.p`\n  font-size: 1rem;\n  text-align: center;\n`\n\nexport const UserIcon = styled.img`\n  height: 50px;\n  width: 50px;\n  margin: 5px auto;\n  border-radius: 50%;\n\n`\n\nexport const AvatarIcon = styled.img`\n  margin-top: 50px;\n  height: 100px;\n  width: 100px;\n  border-radius: 50%;\n`\n","import styled from \"styled-components\";\n\nexport const ModalWrapper = styled.form`\n    width: 530px;   \n    max-height: 65vh; \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n`\n\n\nexport const ModalHeader = styled.div`\n    display:flex;\n    height: 50px;\n    width: 100%;\n    margin-bottom:  15px;\n    background:#eb675e;\n    align-items: center;\n    justify-content: flex-end;\n  \n`\nexport const CloseViewer = styled.button`\n    width: 100px;\n    border-radius:42px;\n    border: none;\n\tdisplay:inline-block;\n\tcursor:pointer;\n    color:white;\n\tbackground-color:#e4685d;\n\tfont-family:Arial;\n\tfont-size:18px;\n\tfont-weight:bold;\n\tpadding-top:10px;\n    padding-bottom:10px;\n\ttext-decoration:none;\n    margin-right: 25px;\n    &:hover{\n        opacity: 0.5;\n    }\n`\nexport const CardMemberUl = styled.ul`\n    width: 100%;\n    overflow: auto;\n`\nexport const CardMemberLi = styled.li`\n    width: 100%;\n`\n\nexport const CardMemberList = styled.div`\n    margin-top:10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const MessageButton = styled.a`\n    background-color:#44c767;\n\tborder-radius:18px;\n\tborder:1px solid #18ab29;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:14px;\n\tpadding:6px 31px;\n\ttext-decoration:none;\n    &:hover{\n        opacity: 0.5;\n    }\n\n`","import axios from 'axios';\nimport React,{useEffect, useState} from 'react'\nimport Modal from 'react-modal'\nimport { CardHead, CardIcon, CardPrag, CardSubHead, CardWrapper } from '../Channels/CardElements';\nimport { bodyStateCons } from '../Config';\nimport { CardMemberLi, CardMemberList, CardMemberUl, CloseViewer, MessageButton, ModalHeader, ModalWrapper } from './ChannelViewerElements';\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\nconst CardChannel = ({channelInfo, modalState, setbodyView}) => {\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const [channelDetail, setchannelDetail] = useState(\"\")\n\n    useEffect(() => {\n        if(channelInfo.modal){\n            \n            const options = {\n                method: 'GET',\n                url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels/${channelInfo.id}`,\n                headers: {'Content-Type': 'application/json', ...customHeaders},\n            }\n        \n            axios.request(options)\n            .then(response => {\n                if (response.status === 200) {\n                  setchannelDetail(response.data)\n                }\n            })\n            .catch(error => {               \n            })\n\n        }\n        \n    }, [channelInfo])\n\n    const getUserName = (userId) => {\n        if(channelInfo.modal){\n\n            const userName =  channelInfo.listofU.data.find(function (el) {\n                return el.id === userId\n                    \n            });\n\n            if( userName === undefined){\n                return \"Unknown User\"\n            }\n        \n            return userName.uid\n        }\n    }\n\n    const setChatChannel = (e) =>{\n        setbodyView(bodyStateCons.chatChannel)\n        localStorage.setItem(\"id\", e.target.id)\n    }\n\n    const messageClick = (e) =>{\n        localStorage.setItem(\"Cid\", e.target.id)\n        setbodyView(bodyStateCons.chatUser)\n    }\n\n    const getChannelDetails = () => {\n        if(channelDetail !== \"\"){\n            return(\n                <>\n                <CardIcon id={channelDetail.data.id} src={`https://avatars.dicebear.com/api/bottts/${channelInfo.id}.svg`}/>\n                <CardHead id={channelDetail.data.id}>{channelDetail.data.name}</CardHead>\n                <CardSubHead id={channelDetail.data.id}>Owner: {getUserName(channelDetail.data.owner_id)}</CardSubHead>\n                <CardPrag id={channelDetail.data.id}>Date of Creation: {new Date(channelDetail.data.created_at).toLocaleDateString(\"en-US\")}</CardPrag>\n                <MessageButton id={channelDetail.data.id} onClick={e=> setChatChannel(e)}>Visit</MessageButton>\n                <CardHead id={channelDetail.data.id}>Members</CardHead>\n\n                <CardMemberUl>\n                {\n                    channelDetail.data.channel_members.map(memberInfo =>{\n                       return <CardMemberLi key ={memberInfo.user_id} id={memberInfo.user_id}>\n                                    <CardMemberList>\n                                        <CardPrag>\n                                        {getUserName(memberInfo.user_id)}\n                                        </CardPrag>\n                                        <MessageButton id={memberInfo.user_id} onClick={e => messageClick(e)}>\n                                            Message\n                                        </MessageButton>\n                                    </CardMemberList>\n                            </CardMemberLi>\n                    })\n                }\n                </CardMemberUl>\n                </>\n            )\n        }\n\n    }\n\n    return (\n        <Modal\n        isOpen={channelInfo.modal}\n        ariaHideApp={false}\n        style={customStyles}\n        >\n            <ModalWrapper>\n                <ModalHeader>\n                    <CloseViewer onClick={()=>modalState({modal:false})}>Close</CloseViewer>\n                </ModalHeader>\n                <CardWrapper>\n                {\n                    getChannelDetails()\n                }                \n            </CardWrapper>\n            </ModalWrapper>\n            \n        </Modal>\n    )\n}\n\nexport default CardChannel\n","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport CardChannel from '../ChannelViewer'\nimport { CardContainer, CardHead, CardIcon, CardOverTitle, CardPrag, CardWrapper, InfoCard } from './CardElements'\nimport ReactPaginate from 'react-paginate';\n\nconst AllChannels = ({setbodyView}) => {\n    const [listofChannels, setListofChannels] = useState([])\n    const [listofUsers, setlistofUsers] = useState([])\n    const [pageSlice, setpageSlice] = useState({start: 0, end:20})\n    const [channelInfo, setChannelInfo] = useState({modal: false , id: 0, listofU: listofUsers})\n    const [pageCount, setPageCount] = useState(0);\n\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n\n    useEffect(() => {\n\n        const options = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n    \n        const optionsUsers = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n\n        axios.request(options)\n        .then(response => {\n            if (response.status === 200) {\n                setListofChannels(response.data)\n                const dataSize = response.data\n                setPageCount(Math.ceil(dataSize.data.length / 20))\n            }\n        }).catch(error => console.log(error))\n        \n        axios.request(optionsUsers)\n        .then(response => {\n            if (response.status === 200) {\n                setlistofUsers(response.data)\n            }\n        }).catch(error => console.log(error))\n        \n\n        return () => {\n            \n        }\n    }, [])\n\n    const handleClicks = e => {        \n        setChannelInfo({modal: true, id:e.target.id,listofU: listofUsers})\n     }\n \n\n    const getChannels = (event) => {\n        if(listofChannels.data && listofUsers.data){\n\n\n            if(event !== undefined && event.selected === 0){\n                setpageSlice({start: 0, end: 20})\n            }else if (event !== undefined && event.selected > 0){\n                setpageSlice({start: 20 * event.selected, end:  20 * (event.selected + 1 )})\n            }\n\n            return(\n               listofChannels.data.slice(pageSlice.start, pageSlice.end).map(channels => \n                        <InfoCard key={channels.id} id={channels.id} onClick={e=>handleClicks(e)}>\n                        <CardIcon id={channels.id} src={`https://avatars.dicebear.com/api/bottts/${channels.id}.svg`}/>\n                    <CardHead id={channels.id}>{channels.name}</CardHead>\n                    <CardPrag id={channels.id}>Date of Creation: {new Date(channels.created_at).toLocaleDateString(\"en-US\")}</CardPrag>\n                    </InfoCard>\n                    ) \n            )  \n        }else{\n            return(\n                <CardPrag>No available channels.</CardPrag>\n            )\n        }\n\n    }\n     \n    return (\n        <>\n\n            <CardContainer id=\"channels\">\n            <CardChannel channelInfo={channelInfo} modalState={setChannelInfo} setbodyView={setbodyView}/>\n\n            <CardOverTitle>\n            All Channels\n            </CardOverTitle>\n            <CardWrapper>\n                {\n                    getChannels()\n                }                \n            </CardWrapper>\n            <ReactPaginate\n                    previousLabel=\"Previous\"\n                    nextLabel=\"Next\"\n                    pageClassName=\"page-item\"\n                    pageLinkClassName=\"page-link\"\n                    previousClassName=\"page-item\"\n                    previousLinkClassName=\"page-link\"\n                    nextClassName=\"page-item\"\n                    nextLinkClassName=\"page-link\"\n                    breakLabel=\"...\"\n                    breakClassName=\"page-item\"\n                    breakLinkClassName=\"page-link\"\n                    containerClassName=\"pagination\"\n                    activeClassName=\"active\"\n                    onPageChange={getChannels}\n                    pageRangeDisplayed={5}\n                    pageCount={pageCount}\n                    />\n            </CardContainer>\n        </>\n    )\n}\n\nexport default AllChannels\n","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport { CardContainer, CardHead, CardIcon, CardOverTitle, CardPrag, CardWrapper, InfoCard } from './CardElements'\nimport ReactPaginate from 'react-paginate';\nimport CardChannel from '../ChannelViewer';\n\nconst MyChannels = ({setbodyView}) => {\n\n    const myId = JSON.parse(localStorage.getItem(\"userinfo\"))\n    const [listofChannels, setListofChannels] = useState([])\n    const [listofUsers, setlistofUsers] = useState([])\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const [channelInfo, setChannelInfo] = useState({modal: false , id: 0, listofU: listofUsers})\n    const [pageSlice, setpageSlice] = useState({start: 0, end:20})\n    const [pageCount, setPageCount] = useState(0);\n\n\n    useEffect(() => {\n        const options = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n    \n        const optionsUsers = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n    \n        axios.request(options)\n        .then(response => {\n            setListofChannels(response.data)\n            const dataSize = response.data\n            setPageCount(Math.ceil(dataSize.data.length / 20));\n        }).catch(error => console.log(error))\n\n        axios.request(optionsUsers)\n        .then(response => {\n            if (response.status === 200) {\n                setlistofUsers(response.data)\n            }\n        }).catch(error => console.log(error))\n        \n    }, [pageSlice])\n\n    const handleClicks = e => {\n        setChannelInfo({modal: true, id:e.target.id,listofU: listofUsers})\n    }\n\n    const getChannels = (event) => {\n        if(listofChannels.data){\n\n            if(event !== undefined && event.selected === 0){\n                setpageSlice({start: 0, end: 20})\n            }else if (event !== undefined && event.selected > 0){\n                setpageSlice({start: 20 * event.selected, end:  20 * (event.selected + 1 )})\n            }\n    \n            const myChannels =  listofChannels.data.filter(function (el) {return el.owner_id === myId.id});\n\n            return( myChannels.slice(pageSlice.start, pageSlice.end).map(channels => \n                <InfoCard key={channels.id} id={channels.id} onClick={e=>handleClicks(e)}>\n                <CardIcon id={channels.id} src={`https://avatars.dicebear.com/api/bottts/${channels.id}.svg`}/>\n                <CardHead id={channels.id}>{channels.name}</CardHead>\n                <CardPrag id={channels.id}>Date of Creation: {new Date(channels.created_at).toLocaleDateString(\"en-US\")}</CardPrag>\n                </InfoCard>\n            ))\n        }else{\n            return(\n                <CardPrag>No available channels.</CardPrag>\n            )\n        }\n    }     \n    return (\n        <>\n\n            <CardContainer id=\"channels\">\n            <CardChannel channelInfo={channelInfo} modalState={setChannelInfo} setbodyView={setbodyView}/>\n            <CardOverTitle>\n            My Channels\n            </CardOverTitle>\n            <CardWrapper>\n                {\n                    getChannels()\n                }   \n            </CardWrapper>\n            <ReactPaginate\n                    previousLabel=\"Previous\"\n                    nextLabel=\"Next\"\n                    pageClassName=\"page-item\"\n                    pageLinkClassName=\"page-link\"\n                    previousClassName=\"page-item\"\n                    previousLinkClassName=\"page-link\"\n                    nextClassName=\"page-item\"\n                    nextLinkClassName=\"page-link\"\n                    breakLabel=\"...\"\n                    breakClassName=\"page-item\"\n                    breakLinkClassName=\"page-link\"\n                    containerClassName=\"pagination\"\n                    activeClassName=\"active\"\n                    onPageChange={getChannels}\n                    pageRangeDisplayed={5}\n                    pageCount={pageCount}\n                    />\n            </CardContainer>\n        </>\n    )\n}\n\nexport default MyChannels\n","import axios from 'axios'\nimport React,{useState, useEffect} from 'react'\nimport { CardContainer, CardHead, CardIcon, CardOverTitle, CardPrag, CardWrapper, InfoCard } from '../Channels/CardElements'\nimport ReactPaginate from 'react-paginate';\nimport { bodyStateCons } from '../Config'\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n// import { NewChannleInfo } from '../NewChannel/NewChannelElements';\n\nconst UsersSection = ({setbodyView}) => {\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const [listofUsers, setlistofUsers] = useState(\"\")\n    const [pageCount, setPageCount] = useState(0);\n    const [pageSlice, setpageSlice] = useState({start: 0, end:20})\n    \n\n    useEffect(() => {\n\n        const options = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n\n        axios.request(options)\n        .then(response =>\n            \n               { setlistofUsers(response.data)\n                const dataSize = response.data\n                setPageCount(Math.ceil(dataSize.data.length / 20));\n            }\n        \n            \n        ).catch(error => console.log(error))\n\n        return () => {\n            \n        }\n    }, [pageSlice])\n\n    const handleOnHover = (result) => {\n        // the item hovered\n    }\n\n    const handleOnFocus = () => {\n    }\n\n    const handleOnSearch = (string, results) => {\n    }\n    \n      const handleOnSelect = (item) => {\n        // the item selected\n        localStorage.setItem(\"Cid\", item.id)\n        setbodyView(bodyStateCons.chatUser)\n        \n      }\n    \n      const formatResult = (item) => {\n        // return item\n        return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n      }\n\n\n    const messageClick = (e) =>{\n        localStorage.setItem(\"Cid\", e.target.id)\n        setbodyView(bodyStateCons.chatUser)\n    }\n\n    const displayList = (event) =>{\n    if(listofUsers !== \"\"){\n        if(event !== undefined && event.selected === 0){\n            setpageSlice({start: 0, end: 20})\n        }else if (event !== undefined && event.selected > 0){\n            setpageSlice({start: 20 * event.selected, end:  20 * (event.selected + 1 )})\n        }\n\n        return(  \n            listofUsers.data.sort( (a, b) => {\n                let ea = a.email.toLowerCase() \n                let eb = b.email.toLowerCase() \n                if (ea < eb) {\n                    return -1;\n                }\n                if (ea > eb) {\n                    return 1;\n                }\n                return 0;\n            }).slice(pageSlice.start, pageSlice.end).map((users, index) => \n            <InfoCard key={users.id} id={users.id} onClick={e => messageClick(e)}>\n            <CardIcon id={users.id} src={`https://avatars.dicebear.com/api/bottts/${users.id}.svg`}/>\n            <CardHead id={users.id} >{users.email}</CardHead>\n            <CardPrag id={users.id}>{new Date(users.created_at).toLocaleDateString(\"en-US\")}</CardPrag>\n            </InfoCard>\n            )\n        )\n      }\n    }\n\n    console.log(listofUsers)\n\n    return (\n        <CardContainer id=\"users\">\n            \n            <CardOverTitle>\n                Users\n                <ReactSearchAutocomplete\n                items={listofUsers.data}\n                onSearch={handleOnSearch}\n                fuseOptions={{ keys: [\"uid\",] }}\n                resultStringKeyName=\"uid\"\n                onHover={handleOnHover}\n                onSelect={handleOnSelect}\n                onFocus={handleOnFocus}\n                autoFocus\n                formatResult={formatResult}/>\n            </CardOverTitle>\n\n            <CardWrapper>\n                {\n                    displayList()\n                }                \n            </CardWrapper>\n            <ReactPaginate\n                    previousLabel=\"Previous\"\n                    nextLabel=\"Next\"\n                    pageClassName=\"page-item\"\n                    pageLinkClassName=\"page-link\"\n                    previousClassName=\"page-item\"\n                    previousLinkClassName=\"page-link\"\n                    nextClassName=\"page-item\"\n                    nextLinkClassName=\"page-link\"\n                    breakLabel=\"...\"\n                    breakClassName=\"page-item\"\n                    breakLinkClassName=\"page-link\"\n                    containerClassName=\"pagination\"\n                    activeClassName=\"active\"\n                    onPageChange={displayList}\n                    pageRangeDisplayed={5}\n                    pageCount={pageCount}\n                    renderOnZeroPageCount={null}/>\n            </CardContainer>\n\n\n    )\n}\n\nexport default UsersSection\n","import styled from \"styled-components\";\n\nexport const NewChannelContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`\nexport const HeadWrapper = styled.div`\n    margin: 2vh 20vw 0 0;\n    display: flex;\n    justify-content: flex-end;\n`\n\nexport const ChannelCreate = styled.a`\n    background-color:#44c767;\n\tborder-radius:18px;\n\tborder:1px solid #18ab29;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:20px;\n\tpadding:6px 31px;\n\ttext-decoration:none;\n    &:hover{\n        opacity: 0.5;\n    }\n\n`\nexport const NewChannelTitle = styled.p`\n    margin: 20px auto 10px auto;\n    color: black;\n    font-size: 30px;\n    font-family: \"Roboto\", sans-serif;\n    letter-spacing: 5px;\n    font-weight: 500;\n`\nexport const NewChannelSTitle = styled.p`\n    color: black;\n    font-size: 40px;\n    width: 80vw;\n    font-weight: bold;\n    text-align: center;\n    margin-top:30px;\n    letter-spacing: 4px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n`\n\nexport const FormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-start;    \n`\n\nexport const NewChannelForm = styled.form`\n    height: 100%;\n`\n\nexport const NewChannelLabel = styled.label``\n\nexport const NewChannelInput = styled.input`\n    border:none;\n    width: 100%;\n    min-height: 85px;\n    width: 355px;\n    font-size: 20px;\n    padding-left:10px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n    color: black;\n    caret-color: green;\n    border-bottom: 2px solid black;\n\n    &:focus{\n        outline: none;\n        caret-color: green;\n        }\n\n`\n\nexport const NewChannelMember =  styled.h2`\n    margin-top: 30px;\n`\n\nexport const NewChannleInfo = styled.p`\n    margin: 10px auto 10px auto;\n\n`\n\nexport const NewChannelUl = styled.ul`\n    width: 100%;\n    overflow: auto;\n`\nexport const NewChannelLi = styled.li`\n    width: 100%;\n`\n\nexport const NewChannelSeparator = styled.div`\n    margin-top:10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const NewChannelError = styled.p`\n    margin: 10px auto 10px auto;\n\tcolor:#f74b17;\n`\n\nexport const RemoveButton = styled.a`\n    background-color:#f74b17;\n\tborder-radius:18px;\n\tborder:1px solid #f74b17;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:14px;\n\tpadding:6px 31px;\n\ttext-decoration:none;\n    &:hover{\n        opacity: 0.5;\n    }\n\n`","import axios from 'axios'\nimport React, {useEffect,useState} from 'react'\nimport { ChannelCreate, FormWrapper, HeadWrapper, NewChannelContainer, NewChannelError, NewChannelForm, NewChannelInput, NewChannelLabel, NewChannelLi, NewChannelMember, NewChannelSeparator, NewChannelSTitle, NewChannelTitle, NewChannelUl, NewChannleInfo, RemoveButton } from './NewChannelElements'\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport Swal from 'sweetalert2'\n\n\nconst NewChannelSec = () => {\n\n    const [newChannel, setNewChannel] = useState(\"\")\n    const [listofUsers, setlistofUsers] = useState(\"\")\n    const [listofNew, setListofNew] = useState([])\n    const [errorCode, seterrorCode] = useState(false)\n    const [errorName, seterrorName] = useState(\"\")\n\n\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n\n    const optionsUsers = {\n        method: 'GET',\n        url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n        headers: {'Content-Type': 'application/json', ...customHeaders },\n    }\n\n    useEffect(() => {\n        axios.request(optionsUsers)\n        .then(response => {\n            if (response.status === 200) {\n                setlistofUsers(response.data)\n            }\n        }).catch(error => console.log(error))\n\n        return () => {\n            setListofNew(\"\")\n        }\n    \n    }, [])\n\n    const handleChannelName = e =>{\n        setNewChannel(e.target.value)\n\n    }\n\n    const handleOnHover = (result) => {\n        // the item hovered\n      }\n    \n      const handleOnFocus = () => {\n      }\n\n    const handleOnSearch = (string, results) => {\n    }\n    \n      const handleOnSelect = (item) => {\n        // the item selected\n        setListofNew( listofNew => ([...listofNew, item]))\n       \n      }\n    \n      const formatResult = (item) => {\n        // return item\n        return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n      }\n\n    const removeUser = e =>{\n        const filtereredUser =  listofNew.filter(function (el) {return el.id != e.target.id});\n        console.log(e.target.id)\n        \n        setListofNew([...filtereredUser])\n\n    }\n\n    const onSubmit = async () => {\n        console.log(\"Submiited\")\n        console.log(listofNew.length)\n\n        seterrorCode(false)\n        seterrorName(\"\")\n\n        if(newChannel === \"\"){\n            seterrorCode(true)\n            seterrorName(\"Channel Name is required!\")\n            return\n        }\n        if(listofNew.length === undefined || listofNew.length === 0){\n            seterrorCode(true)\n            seterrorName(\"Channel Members is required!\")\n            console.log(listofUsers.length )\n            return\n        }\n\n       const data = {\n            \"name\": newChannel,\n            \"user_ids\": listofNew.map( el =>{ return el.id})\n        }  \n\n        const options = {\n            method: 'POST',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels/`,\n            headers: {'Content-Type': 'application/json', ...customHeaders},\n            data: JSON.stringify(data)\n        }\n\n        axios.request(options)\n        .then(response => {\n                if(response.data.data){\n                    Swal.fire(\n                        'Good job!',\n                        'Successfuly created a new Channel!',\n                        'success',\n                        'OK'\n                    )\n                    seterrorCode(false)\n                    seterrorName(\"\")\n                    setNewChannel(\"\")\n                    setListofNew(\"\")\n\n\n                }else {\n                    Swal.fire(\n                        'Error!',\n                        'Name has already been taken!',\n                        'error',\n                        'OK'\n                      )\n                } \n        }).catch()\n    }\n\n    return (\n        <NewChannelContainer>\n\n            <NewChannelSTitle>Transform the way you work with one place for everyone and everything you need to get stuff done.</NewChannelSTitle>\n            <NewChannelTitle>Create your New Channel!</NewChannelTitle>\n            <HeadWrapper>\n                <ChannelCreate onClick={() => onSubmit()}>Create</ChannelCreate>\n            </HeadWrapper>\n            <FormWrapper>\n            <NewChannelForm>\n                <NewChannelLabel>\n                    <NewChannelInput\n                        text \n                        type=\"text\"\n                        name=\"text\"\n                        value={newChannel} \n                        onChange={handleChannelName}\n                        required\n                        placeholder =\"Channel Name\"\n                     ></NewChannelInput>\n                </NewChannelLabel>\n                { errorCode && <NewChannelError>{errorName}</NewChannelError>}\n                <NewChannelMember>Add new Members</NewChannelMember>\n                <NewChannleInfo>Use the search below and click the user email to automatically add in the list</NewChannleInfo>\n                <ReactSearchAutocomplete\n                items={listofUsers.data}\n                onSearch={handleOnSearch}\n                fuseOptions={{ keys: [\"uid\",] }}\n                resultStringKeyName=\"uid\"\n                onHover={handleOnHover}\n                onSelect={handleOnSelect}\n                onFocus={handleOnFocus}\n                autoFocus\n                formatResult={formatResult}\n          />\n            <NewChannleInfo>Members</NewChannleInfo>\n            <NewChannelUl>\n            {\n             \n                listofNew &&  listofNew.map(memberInfo =>{\n                        console.log(memberInfo)\n        \n                        return(<NewChannelLi key ={memberInfo.id} id={memberInfo.id}>\n                                     <NewChannelSeparator>\n                                         <NewChannelSeparator>\n                                         {memberInfo.uid}\n                                         </NewChannelSeparator>\n                                         <RemoveButton id={memberInfo.id} onClick={e=> removeUser(e)}>\n                                             Remove\n                                         </RemoveButton>\n                                     </NewChannelSeparator>\n                                </NewChannelLi>\n                            )\n                     })\n                \n            }\n            </NewChannelUl>\n            </NewChannelForm>\n\n            </FormWrapper>\n        </NewChannelContainer>\n    )\n}\n\nexport default NewChannelSec\n","import styled from \"styled-components\";\n\nexport const ChatChannelCont = styled.div`\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-columns: auto 30%;\n    grid-template-rows: auto 90%;\n    grid-template-areas: \n    \"head head\"\n    \"main members\"\n    ;\n`\n\nexport const ChatChannelHeadWrap = styled.div`\n    padding-left: 20px;\n    grid-area: head;\n`\n\nexport const ChatChannelMessageWrap = styled.div`\n    grid-area: main;\n    height: 100%;\n    padding: 10px;\n    display: grid;\n    grid-template-rows: 90% 10%;\n    grid-template-areas: \"chats\"\"input\";\n`\nexport const ChatChannelMemeberWrap = styled.div`\n    grid-area: members;\n    height: 100%;\n    overflow: auto;\n`\n\nexport const ChatUpperDiv = styled.div`\n    grid-area:chats ;\n    overflow: auto;\n\n`\n\nexport const ChatInputDiv = styled.div`\n    grid-area: input;\n\n`\n\nexport const ChatChannelSTitle = styled.p`\n    color: black;\n    font-size: 30px;\n    text-align: left;\n    margin-top:30px;\n    letter-spacing: 4px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n`\n\nexport const ChatChannelMTitle = styled.p`\n    color: black;\n    font-size: 20px;\n    text-align: center;\n    margin-top:30px;\n    letter-spacing: 4px;\n    font-family: \"TT Commons\", Roboto, sans-serif;\n`\n\nexport const ChatChannelChatUl = styled.ul``\n\nexport const ChatChannelChatLi = styled.li`\n        margin-top: 5px;\n        width: auto;\n\n`\n\nexport const MyChatChanneDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`\n\nexport const MyChatChanneBody = styled.p`\n    padding: 8px;\n    border-radius: 14px;\n    font-size: 20px;\n    width: fit-content;\n    background-color: #90c1f1;\n`\n\nexport const ChatChannelChatDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nexport const ChatChannelSender = styled.p``\n    \nexport const ChatChannelChatBody = styled.p`\n    padding: 8px;\n    border-radius: 14px;\n    font-size: 20px;\n    width: fit-content;\n    background-color: #c5ccd3;\n`\nexport const InputMessage = styled.input`\n    outline: none;\n    border:none;\n    border-bottom: 2px solid black;\n    padding: 10px;\n    margin:10px;\n    height: 30px;\n    width: 80%;\n    font-size: 16px;\n\n`\n\nexport const SendButton = styled.button``\n","import styled from \"styled-components\";\n\nexport const NewMemberConainter = styled.div`\n    min-height: 65vh;\n\n`","import axios from 'axios';\nimport React,{useEffect, useState} from 'react'\nimport Modal from 'react-modal'\nimport { CardHead, CardWrapper } from '../Channels/CardElements';\nimport {  CloseViewer, ModalHeader, ModalWrapper } from '../ChannelViewer/ChannelViewerElements';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport Swal from 'sweetalert2'\nimport { NewChannelLi, NewChannelMember, NewChannelUl, NewChannleInfo, RemoveButton,NewChannelSeparator, HeadWrapper, ChannelCreate } from '../NewChannel/NewChannelElements';\nimport { NewMemberConainter } from './NewMemberElements';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\nconst CardNewMember = ({cardInfo, setCardInfo}) => {\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const [channelDetail, setchannelDetail] = useState(\"\")\n    const [listofUsers, setlistofUsers] = useState(\"\")\n    const [listofNew, setListofNew] = useState([])\n    const [errorCode, seterrorCode] = useState(false)\n    const [errorName, seterrorName] = useState(\n\n\n    useEffect(() => {\n\n        if(cardInfo.modal){\n            console.log(\"showModal\")\n            \n            const options = {\n                method: 'GET',\n                url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels/${cardInfo.id}`,\n                headers: {'Content-Type': 'application/json', ...customHeaders},\n            }\n        \n            const optionsUsers = {\n                method: 'GET',\n                url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n                headers: {'Content-Type': 'application/json', ...customHeaders },\n            }\n\n            axios.request(options)\n            .then(response => {\n                if (response.status === 200) {\n                  setchannelDetail(response.data)\n                  console.log(response.data)\n                }\n            })\n            .catch(error => {               \n            })\n\n            axios.request(optionsUsers)\n            .then(response => {\n                if (response.status === 200) {\n                    setlistofUsers(response.data)\n                }\n            }).catch(error => console.log(error))\n    \n            return () => {\n                setListofNew(\"\")\n            }\n        }\n      \n    \n    }, [cardInfo]))\n\n\n    const handleOnHover = (result) => {\n        // the item hovered\n      }\n    \n      const handleOnFocus = () => {\n      }\n\n    const handleOnSearch = (string, results) => {\n    }\n    \n      const handleOnSelect = (item) => {\n        // the item selected\n        setListofNew( listofNew => ([...listofNew, item]))\n       \n      }\n    \n      const formatResult = (item) => {\n        // return item\n        return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n      }\n\n    const removeUser = e =>{\n        const filtereredUser =  listofNew.filter(function (el) {return el.id != e.target.id});\n        console.log(e.target.id)\n        \n        setListofNew([...filtereredUser])\n\n    }\n\n    const onSubmit = async () => {\n        if(listofNew.length === 0){\n            Swal.fire(\n                'Error!',\n                'Please add a Member!',\n                'error',\n                'OK'\n              )\n\n            return\n        }\n\n        listofNew.map(info => {\n\n            const data = {\n                \"id\": cardInfo.id,\n                \"member_id\": info.id\n            }  \n\n            console.log(data)\n    \n            const options = {\n                method: 'POST',\n                url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channel/add_member`,\n                headers: {'Content-Type': 'application/json', ...customHeaders},\n                data: JSON.stringify(data)\n            }\n\n\n            axios.request(options)\n            .then(response => {\n                    if(response.data.data){\n                        Swal.fire(\n                            'Good job!',\n                            'Successfuly added a new Member!',\n                            'success',\n                            'OK'\n                        )\n                        seterrorCode(false)\n                        seterrorName(\"\")\n                        setListofNew(\"\")\n    \n    \n                    }else {\n                        Swal.fire(\n                            'Error!',\n                            'User must Exists!',\n                            'error',\n                            'OK'\n                          )\n                    } \n            }).catch(\n                Swal.fire(\n                    'Error!',\n                    'An error has occurred!',\n                    'error',\n                    'OK'\n                  )\n            )\n\n        })\n\n    \n\n       \n    }\n\n\n\n    const getChannelDetails = () => {\n        if(channelDetail !== \"\"){\n            console.log(channelDetail.id)\n\n            return(\n                <>\n                <CardHead id={channelDetail.data.id}>{channelDetail.data.name}</CardHead>\n                </>\n            )\n        }\n\n    }\n\n    return (\n        <Modal\n        isOpen={cardInfo.modal}\n        ariaHideApp={false}\n        style={customStyles}\n        >\n            <NewMemberConainter>\n            <ModalWrapper>\n                <ModalHeader>\n                    <CloseViewer onClick={()=>setCardInfo({modal:false})}>Close</CloseViewer>\n                </ModalHeader>\n                <HeadWrapper>\n                <ChannelCreate onClick={() => onSubmit()}>Add</ChannelCreate>\n            </HeadWrapper>\n                <CardWrapper>\n                {\n                    getChannelDetails()\n                }                \n            </CardWrapper>\n            </ModalWrapper>\n\n            <NewChannelMember>Add new Members</NewChannelMember>\n                <NewChannleInfo>Use the search below \n                    and click the user email to automatically add in the list</NewChannleInfo>\n                <ReactSearchAutocomplete\n                items={listofUsers.data}\n                onSearch={handleOnSearch}\n                fuseOptions={{ keys: [\"uid\",] }}\n                resultStringKeyName=\"uid\"\n                onHover={handleOnHover}\n                onSelect={handleOnSelect}\n                onFocus={handleOnFocus}\n                autoFocus\n                formatResult={formatResult}/>\n            <NewChannleInfo>Members</NewChannleInfo>\n            <NewChannelUl>\n                        {\n             \n                listofNew &&  listofNew.map(memberInfo =>{\n                        console.log(memberInfo)\n        \n                        return(<NewChannelLi key ={memberInfo.id} id={memberInfo.id}>\n                                     <NewChannelSeparator>\n                                         <NewChannelSeparator>\n                                         {memberInfo.uid}\n                                         </NewChannelSeparator>\n                                         <RemoveButton id={memberInfo.id} onClick={e=> removeUser(e)}>\n                                             Remove\n                                         </RemoveButton>\n                                     </NewChannelSeparator>\n                                </NewChannelLi>\n                            )\n                     })\n                \n            }\n            </NewChannelUl>\n            </NewMemberConainter>\n\n        </Modal>\n    )\n}\n\nexport default CardNewMember\n","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport { CardPrag } from '../Channels/CardElements'\nimport { CardMemberLi, CardMemberList, CardMemberUl, MessageButton } from '../ChannelViewer/ChannelViewerElements'\nimport { ChatChannelChatBody, ChatChannelChatDiv, ChatChannelChatLi, ChatChannelChatUl, ChatChannelCont, ChatChannelHeadWrap, ChatChannelMemeberWrap, ChatChannelMessageWrap, ChatChannelMTitle, ChatChannelSender, ChatChannelSTitle, ChatInputDiv, ChatUpperDiv, InputMessage, MyChatChanneBody, MyChatChanneDiv } from './ChatChannelElements'\nimport {FiSend} from 'react-icons/fi'\nimport CardNewMember from '../NewMember'\nimport { bodyStateCons } from '../Config'\nconst ChatChannelSec = ({setbodyView}) => {\n\n    const [channelDetails, setchannelDetails] = useState(\"\")\n    const [userMessage, setuserMessage] = useState(\"\")\n    const [listofUsers, setlistofUsers] = useState(\"\")\n    const [messageList, setmessageList] = useState(\"\")\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const channelId = localStorage.getItem(\"id\")\n    const UserInfo = JSON.parse(localStorage.getItem(\"userinfo\"))\n    const [cardState, setcardState] = useState({modal: false, id: channelId})\n\n\n    const optionsMessages = {\n        method: 'GET',\n        url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/messages?receiver_id=${channelId}&receiver_class=Channel`,\n        headers: {'Content-Type': 'application/json', ...customHeaders },\n    }\n\n    useEffect(() => {\n\n        const options = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/channels/${channelId}`,\n            headers: {'Content-Type': 'application/json', ...customHeaders},\n        }\n\n        const optionsUsers = {\n            method: 'GET',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n            headers: {'Content-Type': 'application/json', ...customHeaders },\n        }\n\n\n        axios.request(options)\n        .then(response => {\n            if (response.status === 200) {\n              setchannelDetails(response.data)\n            }\n        })\n        .catch(error => {               \n        })\n\n        axios.request(optionsUsers)\n        .then(response => {\n            if (response.status === 200) {\n                setlistofUsers(response.data)\n            }\n        }).catch()\n\n        const messageonInterval = setInterval(() =>{\n            axios.request(optionsMessages)\n            .then(response => {\n                if (response.status === 200) {\n                    setmessageList(response.data.data)\n                }\n            }).catch()\n                 \n        }, 3 * 1000)\n        \n        return () => {\n            clearInterval(messageonInterval)\n        }\n\n\n    }, [])\n\n    const sendMessage = async () => {\n\n        if(userMessage === \"\"){\n            return\n        }\n\n       const data = {\n            \"receiver_id\": channelId,\n            \"receiver_class\": \"Channel\",\n            \"body\": userMessage\n        }\n\n        const sendOptions = {\n            method: 'POST',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/messages`,\n            headers: {'Content-Type': 'application/json', ...customHeaders},\n            data : data\n        }\n\n\n         await axios.request(sendOptions)\n        .then(response => {\n            if (response.status === 200) {\n                setuserMessage(\"\")\n                axios.request(optionsMessages)\n                .then(response => {\n                    if (response.status === 200) {\n                        setmessageList(response.data.data)\n                    }\n                }).catch()\n            }\n        })\n        .catch(error => {               \n        })\n    }\n    const getUserName = (userId) => {\n        if(listofUsers.data){\n            const userName =  listofUsers.data.find(function (el) {\n                return el.id === userId\n                    \n            });\n\n            if( userName === undefined){\n                return \"Unknown User\"\n            }\n        \n            return userName.uid\n        }\n    }\n\n    const getChannelDBInfo = () => {\n        if(channelDetails !== \"\"){\n            return <ChatChannelSTitle>{channelDetails.data.name}</ChatChannelSTitle>\n        }\n    }\n\n    const messageClick = (e) =>{\n        localStorage.setItem(\"Cid\", e.target.id)\n        setbodyView(bodyStateCons.chatUser)\n    }\n\n    return (\n        \n        <ChatChannelCont>\n            <CardNewMember cardInfo={cardState} setCardInfo={setcardState}/>\n          \n            <ChatChannelHeadWrap>\n           \n            {\n                getChannelDBInfo()\n            }\n            </ChatChannelHeadWrap>\n            <ChatChannelMessageWrap>\n                <ChatUpperDiv>\n                <ChatChannelChatUl>\n                {\n                      messageList &&   messageList.map(data => {\n                        if(data.sender.id == UserInfo.id){\n                            return(\n                                <ChatChannelChatLi key={data.id} id={data.id}>\n                                <MyChatChanneDiv>\n                                    <MyChatChanneBody>{data.body}</MyChatChanneBody>\n                                </MyChatChanneDiv>\n                            </ChatChannelChatLi>\n                            )\n                        }\n                        return(\n        \n                            <ChatChannelChatLi key={data.id} id={data.id}>\n                                <ChatChannelChatDiv>\n                                    <ChatChannelSender>{data.sender.email}</ChatChannelSender>\n                                    <ChatChannelChatBody>{data.body}</ChatChannelChatBody>\n                                </ChatChannelChatDiv>\n                            </ChatChannelChatLi>\n                        )\n                    })\n                }\n                </ChatChannelChatUl>\n                </ChatUpperDiv>\n                <ChatInputDiv>\n                    <InputMessage value={userMessage} onChange={e => setuserMessage(e.target.value)} name=\"message\" type=\"text\" placeholder=\"Send a message\" required />\n                    <MessageButton onClick={() => sendMessage()}>\n                        <FiSend/>\n                    </MessageButton>\n                </ChatInputDiv>\n            </ChatChannelMessageWrap>\n            <ChatChannelMemeberWrap>\n            <ChatChannelMTitle>Members<MessageButton onClick={()=> setcardState({modal: true, id: channelId})}>Add</MessageButton></ChatChannelMTitle>\n            <CardMemberUl>\n            {\n                 channelDetails && channelDetails.data.channel_members.map(memberInfo =>{\n                    return <CardMemberLi key ={memberInfo.user_id} id={memberInfo.user_id}>\n                                 <CardMemberList>\n                                     <CardPrag>\n                                     {getUserName(memberInfo.user_id)}\n                                     </CardPrag>\n                                     <MessageButton id={memberInfo.user_id} onClick={e => messageClick(e)}>\n                                         Message\n                                     </MessageButton>\n                                 </CardMemberList>\n                         </CardMemberLi>\n                 })\n            }\n            </CardMemberUl>\n            </ChatChannelMemeberWrap>\n            \n        </ChatChannelCont>\n    )\n}\n\nexport default ChatChannelSec\n","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport {  MessageButton } from '../ChannelViewer/ChannelViewerElements'\nimport { ChatChannelChatBody, ChatChannelChatDiv, ChatChannelChatLi, ChatChannelChatUl, ChatChannelCont, ChatChannelHeadWrap, ChatChannelMessageWrap, ChatChannelSender, ChatChannelSTitle, ChatInputDiv, ChatUpperDiv, InputMessage, MyChatChanneBody, MyChatChanneDiv } from '../ChatChannel/ChatChannelElements'\nimport {FiSend} from 'react-icons/fi'\nconst ChatUserSec = ({setbodyView}) => {\n\n    const [userMessage, setuserMessage] = useState(\"\")\n    const [messageList, setmessageList] = useState(\"\")\n    const [listofUsers, setlistofUsers] = useState(\"\")\n    const customHeaders =  JSON.parse(localStorage.getItem(\"headers\"))\n    const chatId = localStorage.getItem(\"Cid\")\n    const UserInfo = JSON.parse(localStorage.getItem(\"userinfo\"))\n\n\n    const optionsMessages = {\n        method: 'GET',\n        url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/messages?receiver_id=${chatId}&receiver_class=User`,\n        headers: {'Content-Type': 'application/json', ...customHeaders },\n    }\n\n    const optionsUsers = {\n        method: 'GET',\n        url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/users`,\n        headers: {'Content-Type': 'application/json', ...customHeaders },\n    }\n\n    useEffect(() => {\n\n        axios.request(optionsUsers)\n        .then(response => {\n            if (response.status === 200) {\n                setlistofUsers(response.data)\n            }\n        }).catch()\n\n        const messageonInterval = setInterval(() =>{\n            axios.request(optionsMessages)\n            .then(response => {\n                if (response.status === 200) {\n                    setmessageList(response.data.data)\n                }\n            }).catch()\n                 \n        }, 3 * 1000)\n        \n        return () => {\n            clearInterval(messageonInterval)\n        }\n\n    }, [])\n\n    const sendMessage = async () => {\n\n        if(userMessage === \"\"){\n            return\n        }\n\n       const data = {\n            \"receiver_id\": chatId,\n            \"receiver_class\": \"User\",\n            \"body\": userMessage\n        }\n\n        const sendOptions = {\n            method: 'POST',\n            url: `${process.env.REACT_APP_SLACK_APP_BASE_URL}/messages`,\n            headers: {'Content-Type': 'application/json', ...customHeaders},\n            data : data\n        }\n\n\n         await axios.request(sendOptions)\n        .then(response => {\n            if (response.status === 200) {\n                setuserMessage(\"\")\n                axios.request(optionsMessages)\n                .then(response => {\n                    if (response.status === 200) {\n                        setmessageList(response.data.data)\n                    }\n                }).catch()\n            }\n        })\n        .catch(error => {               \n        })\n    }\n\n    const getUserName = () => {\n        if(listofUsers !== \"\"){\n            const userUID = listofUsers.data.find( info => {\n                    return info.id == chatId\n\n            })\n            \n            return <ChatChannelSTitle>{userUID.uid}</ChatChannelSTitle>\n        }\n    }\n    return (\n        \n        <ChatChannelCont>          \n             <ChatChannelHeadWrap>\n           \n           {\n               getUserName()\n           }\n           </ChatChannelHeadWrap>\n            <ChatChannelMessageWrap>\n                <ChatUpperDiv>\n                <ChatChannelChatUl>\n                {\n                      messageList &&   messageList.map(data => {\n                        if(data.sender.id == UserInfo.id){\n                            return(\n                                <ChatChannelChatLi key={data.id} id={data.id}>\n                                <MyChatChanneDiv>\n                                    <MyChatChanneBody>{data.body}</MyChatChanneBody>\n                                </MyChatChanneDiv>\n                            </ChatChannelChatLi>\n                            )\n                        }\n                        return(\n        \n                            <ChatChannelChatLi key={data.id} id={data.id}>\n                                <ChatChannelChatDiv>\n                                    <ChatChannelSender>{data.sender.email}</ChatChannelSender>\n                                    <ChatChannelChatBody>{data.body}</ChatChannelChatBody>\n                                </ChatChannelChatDiv>\n                            </ChatChannelChatLi>\n                        )\n                    })\n                }\n                </ChatChannelChatUl>\n                </ChatUpperDiv>\n                <ChatInputDiv>\n                    <InputMessage value={userMessage} onChange={e => setuserMessage(e.target.value)} name=\"message\" type=\"text\" placeholder=\"Send a message\" required />\n                    <MessageButton onClick={() => sendMessage()}>\n                        <FiSend/>\n                    </MessageButton>\n                </ChatInputDiv>\n            </ChatChannelMessageWrap>\n        </ChatChannelCont>\n    )\n}\n\nexport default ChatUserSec\n","import React, {useEffect, useState} from 'react'\nimport { BodyReWrapper, MainContainer, NavigationReWrapper, SidebarReWrapper } from './HomeElements'\nimport {HomeNav} from '../Navigator'\nimport SdiebarsSection from '../Sidebars'\nimport AllChannels from '../Channels'\nimport MyChannels from '../Channels/mychannels'\nimport UsersSection from '../Users'\nimport { bodyStateCons } from '../Config'\nimport NewChannelSec from '../NewChannel'\nimport ChatChannelSec from '../ChatChannel'\nimport ChatUserSec from '../ChatUser'\n\n\nconst HomeSection = () => {\n    const [bodyView, setbodyView] = useState(bodyStateCons.myChannels)\n\n    const bodyStateViewer = () =>{\n        if(bodyView === bodyStateCons.myChannels){\n            return (\n                <MyChannels setbodyView={setbodyView}/>\n            )\n        }\n        if(bodyView === bodyStateCons.allChannels){\n            return(\n                <AllChannels setbodyView={setbodyView}/>\n            )\n        }\n\n        if(bodyView === bodyStateCons.createChannels){\n           return(<NewChannelSec setbodyView={setbodyView}/>)\n        }\n\n        if(bodyView === bodyStateCons.userList){\n            return(\n                <UsersSection setbodyView={setbodyView}/>\n            )\n        }\n        if(bodyView === bodyStateCons.chatChannel){\n            return (\n                <ChatChannelSec setbodyView={setbodyView} />\n            )\n        }\n        if(bodyView === bodyStateCons.chatUser){\n            return(\n                <ChatUserSec setbodyView={setbodyView}/>\n            )\n        }\n    }\n\n\n    return (\n        <MainContainer>\n            <NavigationReWrapper>\n                <HomeNav/>\n            </NavigationReWrapper>\n            <SidebarReWrapper>\n                <SdiebarsSection bodyState={setbodyView}/>\n            </SidebarReWrapper>\n            <BodyReWrapper>\n                {\n                    bodyStateViewer()\n                }\n            </BodyReWrapper>\n        </MainContainer>\n    )\n}\n\nexport default HomeSection\n","import React from 'react'\nimport HomeSection from '../components/Home'\n\nconst HomePage = () => {\n    return (\n        <>\n        <HomeSection/>\n        </>\n    )\n}\n\nexport default HomePage\n","import './App.css';\nimport './GSidebar.css'\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport LandingPage from './pages';\nimport RegisterPage from './pages/register';\nimport HomePage from './pages/home';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<LandingPage/>} exact/>\n        <Route path=\"/register\" element={<RegisterPage/>} exact />\n        <Route path=\"/home\" element={<HomePage/>} exact />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}